# Common bash settings.
#
# This is included as a separate file to make it more portable in a couple of respect:
# - Other systems might be modifying the .bashrc file. Where these aren't univeral settings we don't
#   want those clashing with this file.
# - This can also be included in other shells. For example, ZSH.

# Use ag for getting file lists for fzf. This then uses the usual .agignore rules.
export FZF_DEFAULT_COMMAND='ag --hidden -g ""'

# Git
# Make sure `git push` behaves as expected.
git config --global push.default current
# Use vim as the editor
git config --global core.editor "vim"

# History
# Keep a full history. It doesn't look like the options for unlimited size are portable, so just set
# a large value.
export HISTSIZE=999999999
export HISTFILESIZE=999999999
# Appended with each command. This should prevent losing any history on hard restarts.
export PROMPT_COMMAND="history -a; $PROMPT_COMMAND"
# Include timestamp.
export HISTTIMEFORMAT="%F %T "
setopt appendhistory
setopt INC_APPEND_HISTORY  
setopt SHARE_HISTORY

# Make sure to run 256 colour.
# I know we're not supposed to do this. But I don't ever find myself sshing over non-coloured
# emulators, and I often find myself in misconfigured emulators that don't know they are 256 colour.
export TERM=xterm-256color

# Prompt
if [[ $SHELL == */bash ]]
then
    parse_git_branch() {
         git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
    }
    export PS1="\u@\h \[\e[32m\]\w \[\e[91m\]\$(parse_git_branch)\[\e[00m\]$ "
fi

# Disable <C-S>
stty -ixon

# Conda
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/mark/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/mark/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/mark/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/mark/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# >>> pyenv initialize >>>
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# <<< pyenv initialize <<<

# Used by rabbitmq, eg
export PATH=$PATH:/usr/local/sbin


